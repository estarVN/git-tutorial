https://www.youtube.com/watch?v=cC7vg8lWneo

working folder ========> staging area =======> local repositories ========> remote repositories

install git 
https://git-scm.com/downloads

git --version

//ssh key 
https://www.youtube.com/watch?v=pC1s6JOwglE

ssh-keygen -t ed25519 -C "your_email@example.com" //email is registed in github

//If you are using a legacy system that doesn't support the Ed25519 algorithm, use:
ssh-keygen -t rsa -b 4096 -C "your_email@example.com"

gh repo clone estarVN/git-tutorial //use cli
git@github.com:estarVN/git-tutorial.git // use ssh key
https://github.com/estarVN/git-tutorial.git // use https
git clone https://github.com/estarVN/git-tutorial.git

--or create a new repository on the command line
echo "# test" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/estarVN/test.git
git push -u origin main

-- or push an existing repository from the command line
git remote add origin https://github.com/estarVN/test.git
git branch -M main
git push -u origin main

git config --global user.name 'EstarVn'
git config --global user.email 'estar@gmail.com'
git config --global pull.rebase false

git init
git add filename1 filename2
git add .
git status
git restore --staged filename // to unstage this file 
git commit -m "add files"
git commit --amend
git log
git log -1
git log --oneline

git branch
git branch newbranch
git checkout -b newbranch1
git checkout newbranch1
git branch B2 C1 // new branch will created from current branch

git checkout main
git merge newbranch1 //default merge is fast forwading
git merge B5 --no-ff 
git branch -d B3 

git rebase 

https://www.youtube.com/watch?v=0lhtSgkK8SA
git checkout newdeploy_20250430
git cherry-pick C4
git cherry-pick C5 C6 
git cherry-pick -m 1 --no-commit C7..C10
git cheery-pick --abort
git push newdeploy_20250430


//git reset
git reset --hard C2



git checkout 8c3f3bcd577861d45ddfe688300a02189713b8d8 //git checkout hash => new branch is created to hash commit
git branch

git checkout main

.gitignore

git pull // resolve conflict if need and git add to merge
git push
git push --force

git pull origin newbranch1
git push origin newbranch1
git pull = git fetch + git merge

//resolve conflict :  checkout to new branch if need to resolve conflict
https://www.youtube.com/watch?v=bfVU7FZaIrY


// github => pull requests for review to accept merge

//fork project from company 's repo to your repo for modify, pull resques : owner project have permision to merge